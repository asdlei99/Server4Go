// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace example {

namespace {

const ::google::protobuf::Descriptor* S2SSystem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2SSystem_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2SSystem_Helloworld_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2SSystem_Helloworld_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2SSystem_QueryOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2SSystem_QueryOrder_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_test_2eproto() {
  protobuf_AddDesc_test_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "test.proto");
  GOOGLE_CHECK(file != NULL);
  S2SSystem_descriptor_ = file->message_type(0);
  static const int S2SSystem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem, my_queryorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem, my_helloworld_),
  };
  S2SSystem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      S2SSystem_descriptor_,
      S2SSystem::default_instance_,
      S2SSystem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(S2SSystem));
  S2SSystem_Helloworld_descriptor_ = S2SSystem_descriptor_->nested_type(0);
  static const int S2SSystem_Helloworld_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem_Helloworld, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem_Helloworld, str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem_Helloworld, opt_),
  };
  S2SSystem_Helloworld_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      S2SSystem_Helloworld_descriptor_,
      S2SSystem_Helloworld::default_instance_,
      S2SSystem_Helloworld_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem_Helloworld, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem_Helloworld, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(S2SSystem_Helloworld));
  S2SSystem_QueryOrder_descriptor_ = S2SSystem_descriptor_->nested_type(1);
  static const int S2SSystem_QueryOrder_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem_QueryOrder, begin_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem_QueryOrder, end_time_),
  };
  S2SSystem_QueryOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      S2SSystem_QueryOrder_descriptor_,
      S2SSystem_QueryOrder::default_instance_,
      S2SSystem_QueryOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem_QueryOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SSystem_QueryOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(S2SSystem_QueryOrder));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_test_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    S2SSystem_descriptor_, &S2SSystem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    S2SSystem_Helloworld_descriptor_, &S2SSystem_Helloworld::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    S2SSystem_QueryOrder_descriptor_, &S2SSystem_QueryOrder::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_test_2eproto() {
  delete S2SSystem::default_instance_;
  delete S2SSystem_reflection_;
  delete S2SSystem_Helloworld::default_instance_;
  delete S2SSystem_Helloworld_reflection_;
  delete S2SSystem_QueryOrder::default_instance_;
  delete S2SSystem_QueryOrder_reflection_;
}

void protobuf_AddDesc_test_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ntest.proto\022\007example\"\337\001\n\tS2SSystem\0224\n\rm"
    "y_queryorder\030\001 \001(\0132\035.example.S2SSystem.Q"
    "ueryOrder\0224\n\rmy_helloworld\030\002 \001(\0132\035.examp"
    "le.S2SSystem.Helloworld\0322\n\nHelloworld\022\n\n"
    "\002id\030\001 \002(\005\022\013\n\003str\030\002 \002(\t\022\013\n\003opt\030\003 \001(\005\0322\n\nQ"
    "ueryOrder\022\022\n\nbegin_time\030\001 \001(\t\022\020\n\010end_tim"
    "e\030\002 \001(\t", 247);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
  S2SSystem::default_instance_ = new S2SSystem();
  S2SSystem_Helloworld::default_instance_ = new S2SSystem_Helloworld();
  S2SSystem_QueryOrder::default_instance_ = new S2SSystem_QueryOrder();
  S2SSystem::default_instance_->InitAsDefaultInstance();
  S2SSystem_Helloworld::default_instance_->InitAsDefaultInstance();
  S2SSystem_QueryOrder::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_test_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_test_2eproto {
  StaticDescriptorInitializer_test_2eproto() {
    protobuf_AddDesc_test_2eproto();
  }
} static_descriptor_initializer_test_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int S2SSystem_Helloworld::kIdFieldNumber;
const int S2SSystem_Helloworld::kStrFieldNumber;
const int S2SSystem_Helloworld::kOptFieldNumber;
#endif  // !_MSC_VER

S2SSystem_Helloworld::S2SSystem_Helloworld()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example.S2SSystem.Helloworld)
}

void S2SSystem_Helloworld::InitAsDefaultInstance() {
}

S2SSystem_Helloworld::S2SSystem_Helloworld(const S2SSystem_Helloworld& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:example.S2SSystem.Helloworld)
}

void S2SSystem_Helloworld::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2SSystem_Helloworld::~S2SSystem_Helloworld() {
  // @@protoc_insertion_point(destructor:example.S2SSystem.Helloworld)
  SharedDtor();
}

void S2SSystem_Helloworld::SharedDtor() {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete str_;
  }
  if (this != default_instance_) {
  }
}

void S2SSystem_Helloworld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2SSystem_Helloworld::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2SSystem_Helloworld_descriptor_;
}

const S2SSystem_Helloworld& S2SSystem_Helloworld::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

S2SSystem_Helloworld* S2SSystem_Helloworld::default_instance_ = NULL;

S2SSystem_Helloworld* S2SSystem_Helloworld::New() const {
  return new S2SSystem_Helloworld;
}

void S2SSystem_Helloworld::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<S2SSystem_Helloworld*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(id_, opt_);
    if (has_str()) {
      if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        str_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool S2SSystem_Helloworld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example.S2SSystem.Helloworld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_str;
        break;
      }

      // required string str = 2;
      case 2: {
        if (tag == 18) {
         parse_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "str");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_opt;
        break;
      }

      // optional int32 opt = 3;
      case 3: {
        if (tag == 24) {
         parse_opt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));
          set_has_opt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example.S2SSystem.Helloworld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example.S2SSystem.Helloworld)
  return false;
#undef DO_
}

void S2SSystem_Helloworld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example.S2SSystem.Helloworld)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string str = 2;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str(), output);
  }

  // optional int32 opt = 3;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->opt(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:example.S2SSystem.Helloworld)
}

::google::protobuf::uint8* S2SSystem_Helloworld::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.S2SSystem.Helloworld)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string str = 2;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str(), target);
  }

  // optional int32 opt = 3;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->opt(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.S2SSystem.Helloworld)
  return target;
}

int S2SSystem_Helloworld::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required string str = 2;
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

    // optional int32 opt = 3;
    if (has_opt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2SSystem_Helloworld::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const S2SSystem_Helloworld* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2SSystem_Helloworld*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2SSystem_Helloworld::MergeFrom(const S2SSystem_Helloworld& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_str()) {
      set_str(from.str());
    }
    if (from.has_opt()) {
      set_opt(from.opt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void S2SSystem_Helloworld::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSystem_Helloworld::CopyFrom(const S2SSystem_Helloworld& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSystem_Helloworld::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void S2SSystem_Helloworld::Swap(S2SSystem_Helloworld* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(str_, other->str_);
    std::swap(opt_, other->opt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata S2SSystem_Helloworld::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2SSystem_Helloworld_descriptor_;
  metadata.reflection = S2SSystem_Helloworld_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int S2SSystem_QueryOrder::kBeginTimeFieldNumber;
const int S2SSystem_QueryOrder::kEndTimeFieldNumber;
#endif  // !_MSC_VER

S2SSystem_QueryOrder::S2SSystem_QueryOrder()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example.S2SSystem.QueryOrder)
}

void S2SSystem_QueryOrder::InitAsDefaultInstance() {
}

S2SSystem_QueryOrder::S2SSystem_QueryOrder(const S2SSystem_QueryOrder& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:example.S2SSystem.QueryOrder)
}

void S2SSystem_QueryOrder::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  begin_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2SSystem_QueryOrder::~S2SSystem_QueryOrder() {
  // @@protoc_insertion_point(destructor:example.S2SSystem.QueryOrder)
  SharedDtor();
}

void S2SSystem_QueryOrder::SharedDtor() {
  if (begin_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete begin_time_;
  }
  if (end_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete end_time_;
  }
  if (this != default_instance_) {
  }
}

void S2SSystem_QueryOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2SSystem_QueryOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2SSystem_QueryOrder_descriptor_;
}

const S2SSystem_QueryOrder& S2SSystem_QueryOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

S2SSystem_QueryOrder* S2SSystem_QueryOrder::default_instance_ = NULL;

S2SSystem_QueryOrder* S2SSystem_QueryOrder::New() const {
  return new S2SSystem_QueryOrder;
}

void S2SSystem_QueryOrder::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_begin_time()) {
      if (begin_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        begin_time_->clear();
      }
    }
    if (has_end_time()) {
      if (end_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        end_time_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool S2SSystem_QueryOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example.S2SSystem.QueryOrder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string begin_time = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_begin_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->begin_time().data(), this->begin_time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "begin_time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_end_time;
        break;
      }

      // optional string end_time = 2;
      case 2: {
        if (tag == 18) {
         parse_end_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->end_time().data(), this->end_time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "end_time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example.S2SSystem.QueryOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example.S2SSystem.QueryOrder)
  return false;
#undef DO_
}

void S2SSystem_QueryOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example.S2SSystem.QueryOrder)
  // optional string begin_time = 1;
  if (has_begin_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->begin_time().data(), this->begin_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "begin_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->begin_time(), output);
  }

  // optional string end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->end_time().data(), this->end_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "end_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->end_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:example.S2SSystem.QueryOrder)
}

::google::protobuf::uint8* S2SSystem_QueryOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.S2SSystem.QueryOrder)
  // optional string begin_time = 1;
  if (has_begin_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->begin_time().data(), this->begin_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "begin_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->begin_time(), target);
  }

  // optional string end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->end_time().data(), this->end_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "end_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->end_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.S2SSystem.QueryOrder)
  return target;
}

int S2SSystem_QueryOrder::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string begin_time = 1;
    if (has_begin_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->begin_time());
    }

    // optional string end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->end_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2SSystem_QueryOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const S2SSystem_QueryOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2SSystem_QueryOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2SSystem_QueryOrder::MergeFrom(const S2SSystem_QueryOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_begin_time()) {
      set_begin_time(from.begin_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void S2SSystem_QueryOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSystem_QueryOrder::CopyFrom(const S2SSystem_QueryOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSystem_QueryOrder::IsInitialized() const {

  return true;
}

void S2SSystem_QueryOrder::Swap(S2SSystem_QueryOrder* other) {
  if (other != this) {
    std::swap(begin_time_, other->begin_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata S2SSystem_QueryOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2SSystem_QueryOrder_descriptor_;
  metadata.reflection = S2SSystem_QueryOrder_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int S2SSystem::kMyQueryorderFieldNumber;
const int S2SSystem::kMyHelloworldFieldNumber;
#endif  // !_MSC_VER

S2SSystem::S2SSystem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example.S2SSystem)
}

void S2SSystem::InitAsDefaultInstance() {
  my_queryorder_ = const_cast< ::example::S2SSystem_QueryOrder*>(&::example::S2SSystem_QueryOrder::default_instance());
  my_helloworld_ = const_cast< ::example::S2SSystem_Helloworld*>(&::example::S2SSystem_Helloworld::default_instance());
}

S2SSystem::S2SSystem(const S2SSystem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:example.S2SSystem)
}

void S2SSystem::SharedCtor() {
  _cached_size_ = 0;
  my_queryorder_ = NULL;
  my_helloworld_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2SSystem::~S2SSystem() {
  // @@protoc_insertion_point(destructor:example.S2SSystem)
  SharedDtor();
}

void S2SSystem::SharedDtor() {
  if (this != default_instance_) {
    delete my_queryorder_;
    delete my_helloworld_;
  }
}

void S2SSystem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2SSystem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2SSystem_descriptor_;
}

const S2SSystem& S2SSystem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

S2SSystem* S2SSystem::default_instance_ = NULL;

S2SSystem* S2SSystem::New() const {
  return new S2SSystem;
}

void S2SSystem::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_my_queryorder()) {
      if (my_queryorder_ != NULL) my_queryorder_->::example::S2SSystem_QueryOrder::Clear();
    }
    if (has_my_helloworld()) {
      if (my_helloworld_ != NULL) my_helloworld_->::example::S2SSystem_Helloworld::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool S2SSystem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example.S2SSystem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .example.S2SSystem.QueryOrder my_queryorder = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_my_queryorder()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_my_helloworld;
        break;
      }

      // optional .example.S2SSystem.Helloworld my_helloworld = 2;
      case 2: {
        if (tag == 18) {
         parse_my_helloworld:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_my_helloworld()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example.S2SSystem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example.S2SSystem)
  return false;
#undef DO_
}

void S2SSystem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example.S2SSystem)
  // optional .example.S2SSystem.QueryOrder my_queryorder = 1;
  if (has_my_queryorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->my_queryorder(), output);
  }

  // optional .example.S2SSystem.Helloworld my_helloworld = 2;
  if (has_my_helloworld()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->my_helloworld(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:example.S2SSystem)
}

::google::protobuf::uint8* S2SSystem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.S2SSystem)
  // optional .example.S2SSystem.QueryOrder my_queryorder = 1;
  if (has_my_queryorder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->my_queryorder(), target);
  }

  // optional .example.S2SSystem.Helloworld my_helloworld = 2;
  if (has_my_helloworld()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->my_helloworld(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.S2SSystem)
  return target;
}

int S2SSystem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .example.S2SSystem.QueryOrder my_queryorder = 1;
    if (has_my_queryorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->my_queryorder());
    }

    // optional .example.S2SSystem.Helloworld my_helloworld = 2;
    if (has_my_helloworld()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->my_helloworld());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2SSystem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const S2SSystem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2SSystem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2SSystem::MergeFrom(const S2SSystem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_my_queryorder()) {
      mutable_my_queryorder()->::example::S2SSystem_QueryOrder::MergeFrom(from.my_queryorder());
    }
    if (from.has_my_helloworld()) {
      mutable_my_helloworld()->::example::S2SSystem_Helloworld::MergeFrom(from.my_helloworld());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void S2SSystem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSystem::CopyFrom(const S2SSystem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSystem::IsInitialized() const {

  if (has_my_helloworld()) {
    if (!this->my_helloworld().IsInitialized()) return false;
  }
  return true;
}

void S2SSystem::Swap(S2SSystem* other) {
  if (other != this) {
    std::swap(my_queryorder_, other->my_queryorder_);
    std::swap(my_helloworld_, other->my_helloworld_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata S2SSystem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2SSystem_descriptor_;
  metadata.reflection = S2SSystem_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace example

// @@protoc_insertion_point(global_scope)
